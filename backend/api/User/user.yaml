components:
  schemas:
    UserData:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        patronymic:
          type: string
          nullable: true
        role:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
          nullable: false
        imageSrc:
          type: string
          nullable: true
        email:
          type: string
          format: email
          nullable: false
        groupIds:
          type: array
          items:
            type: string
          nullable: false
      required:
        - userId
        - firstName
        - lastName
        - role
        - email
        - groupIds

    UsersList:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserData'
      required:
        - users

    ListUsersSpec:
      type: object
      properties:
        groupIds:
          type: array
          items:
            type: string
            format: uuid
            nullable: false
        orderField:
          type: string
        ascOrder:
          type: boolean
        page:
          type: integer
        limit:
          type: integer
        roles:
          type: array
          items:
            type: integer
            enum:
              - 1
              - 2
              - 3
              - 4

    CreateUserRequest:
      type: object
      properties:
        firstName:
          type: string
          nullable: false
        lastName:
          type: string
          nullable: false
        patronymic:
          type: string
          nullable: true
        role:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
          nullable: false
        imageData:
          type: string
          format: base64
          nullable: true
        email:
          type: string
          format: email
          nullable: false
        groupIds:
          type: array
          items:
            type: string
          nullable: false
        password:
          type: string
          nullable: false
      required:
        - firstName
        - lastName
        - role
        - email
        - groupIds
        - password

    CreateUserResponse:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
      required:
        - userId

    UpdateUserRequest:
      type: object
      properties:
        userId:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        patronymic:
          type: string
        role:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
        imageData:
          type: string
          format: base64
        email:
          type: string
          format: email
        groupIds:
          type: array
          items:
            type: string
        password:
          type: string
      required:
        - userId

    DeleteUserRequest:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          nullable: false
      required:
        - userId

  responses:
    UsersListResponse:
      description: OK
      content:
        application/json:
          schema:
            type: object
            properties:
              users:
                $ref: '#/components/schemas/UsersList'
              maxPage:
                type: integer
            required:
              - users
              - maxPage